import re
def clean_amharic_text(text):
    if not isinstance(text, str):
        return ""
    
    fidel_map = {
        'ሃ': 'ሀ', 'ኅ': 'ሀ', 'ኃ': 'ሀ', 'ሐ': 'ሀ', 'ሓ': 'ሀ', 'ኻ': 'ሀ',
        'ሑ': 'ሁ', 'ኁ': 'ሁ', 'ዅ': 'ሁ', 'ኂ': 'ሂ', 'ሒ': 'ሂ', 'ኺ': 'ሂ',
        'ኌ': 'ሄ', 'ሔ': 'ሄ', 'ዄ': 'ሄ', 'ሕ': 'ህ', 'ኅ': 'ህ', 'ኆ': 'ሆ',
        'ሖ': 'ሆ', 'ኾ': 'ሆ', 'ሠ': 'ሰ', 'ሡ': 'ሱ', 'ሢ': 'ሲ', 'ሣ': 'ሳ',
        'ሤ': 'ሴ', 'ሥ': 'ስ', 'ሦ': 'ሶ', 'ዓ': 'አ', 'ኣ': 'አ', 'ዐ': 'አ',
        'ዑ': 'ኡ', 'ዒ': 'ኢ', 'ዔ': 'ኤ', 'ዕ': 'እ', 'ዖ': 'ኦ', 'ጸ': 'ፀ',
        'ጹ': 'ፁ', 'ጺ': 'ፂ', 'ጻ': 'ፃ', 'ጼ': 'ፄ', 'ጽ': 'ፅ', 'ጾ': 'ፆ'
    }

    compound_rules = [
        (r'ሉ[ዋአ]', 'ሏ'), (r'ሙ[ዋአ]', 'ሟ'), (r'ቱ[ዋአ]', 'ቷ'), (r'ሩ[ዋአ]', 'ሯ'),
        (r'ሱ[ዋአ]', 'ሷ'), (r'ሹ[ዋአ]', 'ሿ'), (r'ቁ[ዋአ]', 'ቋ'), (r'ቡ[ዋአ]', 'ቧ'),
        (r'ቹ[ዋአ]', 'ቿ'), (r'ሁ[ዋአ]', 'ኋ'), (r'ኑ[ዋአ]', 'ኗ'), (r'ኙ[ዋአ]', 'ኟ'),
        (r'ኩ[ዋአ]', 'ኳ'), (r'ዙ[ዋአ]', 'ዟ'), (r'ጉ[ዋአ]', 'ጓ'), (r'ደ[ዋአ]', 'ዷ'),
        (r'ጡ[ዋአ]', 'ጧ'), (r'ጩ[ዋአ]', 'ጯ'), (r'ጹ[ዋአ]', 'ጿ'), (r'ፉ[ዋአ]', 'ፏ')
    ]

    for src, tgt in fidel_map.items():
        text = text.replace(src, tgt)

    amharic_numerals = {
        '፩': '1', '፪': '2', '፫': '3', '፬': '4', '፭': '5',
        '፮': '6', '፯': '7', '፰': '8', '፱': '9', '፲': '10',
        '፳': '20', '፴': '30', '፵': '40', '፶': '50', '፷': '60',
        '፸': '70', '፹': '80', '፺': '90', '፻': '100', '፼': '10000'
    }

    for amh, arabic in amharic_numerals.items():
        text = text.replace(amh, arabic)

    patterns = [
        r'http\S+|www\S+|bit\.ly\S+',
        r'\S*@\S*\s?',
        r'@[A-Za-z0-9_]+',
        r'#\S+',
        r'<.*?>'
    ]

    for pattern in patterns:
        text = re.sub(pattern, '', text)

    